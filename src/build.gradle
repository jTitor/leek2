//Describes tasks to perform during build.
//Any dependencies should be specified by the task.
buildscript {
	repositories {
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}

	//Try to use the Rust plugin.
	dependencies {
		//We might need to publish the plugin to a public repo first.
		classpath "gradle.plugin.com.jtitor:rust-gradle-plugin:0.1-SNAPSHOT"
	}
}

//Add our Rust plugin.
apply plugin: "com.jtitor.rust"

//--- First try code! ---
//Delete this once you're used to Gradle.
task printDemo {
	//Metadata is placed inside the task.
	//Everything in this scope is evaluated no matter what task is requested.
	group 'practice'
	description 'Prints a message to the screen.'

	doFirst {
		println 'Entering printDemo!'
	}
	//This specifies that this must be done last in a chain of tasks.
	doLast {
		println 'Exiting printDemo!'
	}
}

task dependencyDemo(dependsOn:'printDemo') {
	group 'practice'
	description 'Depends on another task.'

	doFirst {
		println 'Entering dependencyDemo...'
	}

	doLast {
		println 'Exiting dependencyDemo.'

		//When run, this runs printDemo,
		//*then* dependencyDemo.
	}
}

//---BEGIN ACTUAL WORK HERE---
//This project will eventually want a package step for the
//subprojects.
task doBuild(dependsOn:[":open-source:doBuild",":closed-source:doBuild"]) {
	//		Remember to distinguish debug/release!
	description "Builds all artifacts."
	group "project-global"

	doLast {
		//TODO
	}
}

task doTest(dependsOn:[":open-source:doTest",":closed-source:doTest"]) {
	//		Remember to distinguish debug/release!
	description "Tests all artifacts."
	group "project-global"

	doLast {
		//TODO
	}
}

task doPackage(dependsOn:[":open-source:doPackage",":closed-source:doPackage"]) {
	description "Packs all artifacts into an archive/installer."
	//Result must be one artifact that can
	//ideally be installed without interaction.
	group "project-global"

	doLast {
		//TODO
	}
}